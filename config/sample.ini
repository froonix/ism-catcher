; ------------------------------------ ;
; SAMPLE CONFIGURATION FOR ISM-CATCHER ;
; ------------------------------------ ;

;; (OPTIONAL)
;; Munin update interval.
;interval = 300

;; (OPTIONAL)
;; Location of binary *.db files.
;; Defaults to sys_get_temp_dir().
;datadir = /tmp

;; (OPTIONAL)
;; Purge old data in *.db files after so many packets.
;; At DBv1 each packet is 10 byte, excluding a 2 byte header.
;dbcleanup = 100

;; (OPTIONAL)
;; Custom title for graphs.
;title = 433.92 MHz

;; (OPTIONAL)
;; Custom description for page.
;info = Powered by foo bar and bar foo.

;; (OPTIONAL)
;; Custom vlabel for graphs.
;vlabel = degree Celsius

;; (OPTIONAL)
;; Custom category for graphs.
;category = sensors

;; (OPTIONAL)
;; Set upper limit for fancy graphs.
;highest = 50.0

;; (OPTIONAL)
;; Set lower limit for fancy graphs.
;lowest  = -20.0

;; (OPTIONAL)
;; Draw a line at <n> with color <RRGGBB>.
;; The third argument would print a legend too.
;; Very usefull for freezing mark or similar.
base = 0:BEBEBE


; Text between [] is an unique key for one sensor/measurement.
; It's impossible to combine two values from one wireless sensor
; into one definition. Each value needs its own definition...
[EXAMPLE]

; All lower-cased settings are required conditions for this sensor.
; Just think of it as simple IF-EQUAL checks, concatenated by AND.
; The keys and values from JSON input are converted to lowercase.
; Beware of changed values in ID or SID fields on battery change!
model     = OSv1 Temperature Sensor
channel   = 1
;sid      = n

;; (OPTIONAL)
;; All upper-cased settings are overriding the built-in default values.
;; Take a look at the Wiki: http://munin-monitoring.org/wiki/fieldnames
;LABEL    = Visible name for this sensor
;INFO     = Description for this sensor
;WARNING  = [<l>]:[<u>]
;CRITICAL = [<l>]:[<u>]
;COLOUR   = <0..28>
;LINE     = <1..3>

;; (OPTIONAL)
;; The default data source is "temperature_C".
;; You can override it with your own field names.
;SOURCE   = humidity

;; (OPTIONAL)
;; Use this line to hide the sensor in the graphs.
;; All data will be stored in the RRD, but it's hidden.
;graph    = false

;; (OPTIONAL)
;; By default processing of groups will stop after the first match.
;; You can change this behavior for sensors with multiple values.
;; (e.g. temperature, humidity, barometric pressure, ...)
;FINAL    = false


; --------------------------------------- ;
; SOME EXAMPLES FROM MY PERSONAL SETUP... ;
; --------------------------------------- ;

[FRIDGE]
model    = OSv1 Temperature Sensor
channel  = 3

LABEL    = Fridge
INFO     = Oregon Scientific THR128 (channel 3)
CRITICAL = 2:12
COLOUR   = 1
LINE     = 2


[OUTDOOR]
model    = OSv1 Temperature Sensor
channel  = 2
;sid     = n

LABEL    = Outdoor
INFO     = Oregon Scientific THN128 (channel 2)
COLOUR   = 0
LINE     = 3


[Acurite]
model    = Acurite 606TX Sensor
;id      = n

GRAPH    = false
LABEL    = [!] Acurite
INFO     = Acurite 606TX Sensor
COLOUR   = 16


[Nexus_Temperature]
model    = Nexus Temperature/Humidity
channel  = 1
;id      = n

GRAPH    = false
LABEL    = [!] Nexus (temperature)
INFO     = Nexus Temperature/Humidity
FINAL    = false
COLOUR   = 8


[Nexus_Humidity]
model    = Nexus Temperature/Humidity
channel  = 1
;id      = n

GRAPH    = false
LABEL    = [!] Nexus (humidity)
INFO     = Nexus Temperature/Humidity
SOURCE   = humidity
COLOUR   = 20
